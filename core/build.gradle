apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion project.compileSdkVersion
    buildToolsVersion project.buildToolsVersion

    defaultConfig {
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionCode project.versionCode
        versionName project.versionName

        testInstrumentationRunner project.testInstrumentationRunner
        consumerProguardFiles 'consumer-rules.pro'
    }

    testOptions {
        unitTests.all {
            execution 'ANDROIDX_TEST_ORCHESTRATOR'
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation generalDependency.kotlin
    implementation generalDependency.appcompat
    implementation generalDependency.core
    testImplementation generalDependency.junit
    androidTestImplementation generalDependency.androidxJunit
    androidTestImplementation generalDependency.androidxEspresso

    // Orchestration test
    androidTestUtil generalDependency.androidxOrchestrator

    // Lifecycle
    implementation generalDependency.lifecycle
    kapt generalDependency.lifecycleCompiler

    // Room persistence library
    implementation generalDependency.room
    implementation generalDependency.roomCoroutine
    kapt generalDependency.roomCompiler
    testImplementation generalDependency.roomAnnotation

    // Mockito
    testImplementation generalDependency.mockito
    androidTestImplementation generalDependency.mockitoTestImplementation

    // Dagger 2
    implementation generalDependency.dagger
    implementation generalDependency.daggerAndroid
    implementation generalDependency.daggerSupport
    kapt generalDependency.daggerAnnotationProcessor
    kapt generalDependency.daggerCompiler
}
