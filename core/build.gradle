apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion project.compileSdkVersion
    buildToolsVersion project.buildToolsVersion

    defaultConfig {
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionCode project.versionCode
        versionName project.versionName

        testInstrumentationRunner project.testInstrumentationRunner
        consumerProguardFiles 'consumer-rules.pro'
    }

    testOptions {
        unitTests.all {
            execution 'ANDROIDX_TEST_ORCHESTRATOR'
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation generalDependency.kotlin
    implementation generalDependency.appcompat
    implementation generalDependency.core
    testImplementation generalDependency.junit
    androidTestImplementation generalDependency.androidxJunit
    androidTestImplementation generalDependency.androidxEspresso

    // Orchestration test
    androidTestUtil coreDependency.androidxOrchestrator

    // Lifecycle
    implementation generalDependency.lifecycle
    kapt generalDependency.lifecycleCompiler

    // Room persistence library
    implementation coreDependency.room
    implementation coreDependency.roomCoroutine
    kapt coreDependency.roomCompiler
    testImplementation coreDependency.roomAnnotation

    // Mockito
    testImplementation coreDependency.mockito
    androidTestImplementation coreDependency.mockitoTestImplementation

    // Dagger 2
    implementation coreDependency.dagger
    implementation coreDependency.daggerAndroid
    implementation coreDependency.daggerSupport
    kapt coreDependency.daggerAnnotationProcessor
    kapt coreDependency.daggerCompiler

    implementation coreDependency.coroutines

    // retrofit
    implementation coreDependency.retrofit
    implementation coreDependency.converter
    implementation coreDependency.interceptor
    testImplementation coreDependency.mockwebserver

    // firebase
    implementation generalDependency.firebaseAnalytics
    implementation generalDependency.crashlytics
}
