ext {
    kotlin_stdlib_version = '1.3.71'
    appcompat_version = '1.1.0'
    core_version = '1.2.0'
    junit_version = '4.13'
    androidxjunit_version = '1.1.1'
    androidxespresso_version = '3.2.0'
    lifecycle_version = "2.2.0"


    generalDependency = [
        kotlin : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_stdlib_version",
        appcompat : "androidx.appcompat:appcompat:$appcompat_version",
        core : "androidx.core:core-ktx:$core_version",
        junit : "junit:junit:$junit_version",
        androidxJunit : "androidx.test.ext:junit:$androidxjunit_version",
        androidxEspresso : "androidx.test.espresso:espresso-core:$androidxespresso_version",
        lifecycle: "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version",
        lifecycleCompiler: "androidx.lifecycle:lifecycle-compiler:$lifecycle_version",
    ]

    material_version = "1.1.0"

    appDependency = [
            material : "com.google.android.material:material:$material_version"
    ]

    coroutines_version = "1.3.5"
    retrofit_version = "2.8.1"
    okhttp_version = "4.5.0"
    dagger_version = "2.27"
    dagger_version = '2.27'
    room_version = '2.2.5'
    orchestrator_version = '1.2.0'
    mockito_version = '2.21.0'

    coreDependency = [
            coroutines : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version",
            retrofit : "com.squareup.retrofit2:retrofit:$retrofit_version",
            converter : "com.squareup.retrofit2:converter-gson:$retrofit_version",
            interceptor : "com.squareup.okhttp3:logging-interceptor:$okhttp_version",
            mockwebserver : "com.squareup.okhttp3:mockwebserver:$okhttp_version",
            room : "androidx.room:room-runtime:$room_version",
            roomCoroutine : "androidx.room:room-ktx:$room_version",
            roomCompiler : "androidx.room:room-compiler:$room_version",
            roomAnnotation : "androidx.room:room-testing:$room_version",
            androidxOrchestrator : "androidx.test:orchestrator:$orchestrator_version",
            mockito : "org.mockito:mockito-core:$mockito_version",
            mockitoTestImplementation : "org.mockito:mockito-android:$mockito_version",
            dagger : "com.google.dagger:dagger:$dagger_version",
            daggerAndroid : "com.google.dagger:dagger-android:$dagger_version",
            daggerSupport : "com.google.dagger:dagger-android-support:$dagger_version",
            daggerAnnotationProcessor : "com.google.dagger:dagger-android-processor:$dagger_version",
            daggerCompiler : "com.google.dagger:dagger-compiler:$dagger_version"
    ]
}
